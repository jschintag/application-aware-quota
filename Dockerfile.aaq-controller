# Builder stage
ARG BUILDPLATFORM
FROM --platform=$BUILDPLATFORM docker.io/library/golang:1.22-alpine AS builder

# Install make
RUN apk update && apk add make

# Copy the source code from the host to the container
COPY pkg /workdir/app/pkg
COPY staging /workdir/app/staging
COPY cmd /workdir/app/cmd
COPY vendor /workdir/app/vendor
COPY go.mod /workdir/app/go.mod
COPY go.sum /workdir/app/go.sum
COPY Makefile /workdir/app/Makefile

WORKDIR /workdir/app

ARG TARGETARCH

RUN GOARCH="${TARGETARCH}" make aaq_controller

# Final stage
FROM docker.io/library/golang:1.22-alpine

# Copy the binary from the builder stage to the final image
COPY --from=builder /workdir/app/aaq_controller /app/aaq_controller

# Set the working directory to /app
WORKDIR /app

RUN adduser -u 1001 -D -s /bin/sh -h /app/aaq_controller aaq_controller
USER 1001

# Set the entrypoint to the binary
ENTRYPOINT ["/app/aaq_controller"]
